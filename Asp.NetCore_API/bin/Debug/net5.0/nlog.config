<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			autoReload="true"
			internalLogLevel="info"
			internalLogFile="./Logs/internal-nlog.log">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore" />
	</extensions>

	<variable name="LogDirectory" value="${gdc:LogDirectory}"></variable>
	
	<!-- the targets to write to -->
	<targets>
		<!-- write logs to file  -->
		<target xsi:type="File" name="allfile" fileName="${LogDirectory}/nlog-all-${shortdate}.log"
						layout="[ ${longdate} ${event-properties:item=EventId_Id}] | (${uppercase:${level}}) | ${logger} | ${message} ${exception:format=tostring}" />

		<!-- another file log, only own logs. Uses some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="${LogDirectory}/nlog-own-${shortdate}.log"
						layout="[ ${longdate} ${event-properties:item=EventId_Id}] | (${uppercase:${level}}) | ${logger} | ${message} ${exception:format=tostring} | url: ${aspnet-request-url} | action: ${aspnet-mvc-action}" />

		<!--Database Log-->
		<target name="database" xsi:type="Database" connectionString="${configsetting:item=ConnectionStrings.DBConnection}"
		 dbProvider="Microsoft.Data.SqlClient.SqlConnection,Microsoft.Data.SqlClient">
			<!--<connectionString>server=DATACENTER-DELL\SQLEXPRESS;Database=InterlifeOrbies_Dev;Trusted_Connection=True;MultipleActiveResultSets=true</connectionString>-->
			<!--
			Script for creating the dbo.Log table.

			SET ANSI_NULLS ON
			SET QUOTED_IDENTIFIER ON
			CREATE TABLE [dbo].[Log] (
				[Id] [int] IDENTITY(1,1) NOT NULL,
				[MachineName] [nvarchar](50) NOT NULL,
				[Logged] [datetime] NOT NULL,
				[Level] [nvarchar](50) NOT NULL,
				[Message] [nvarchar](max) NOT NULL,
				[Logger] [nvarchar](250) NULL,
				[Callsite] [nvarchar](max) NULL,
				[Exception] [nvarchar](max) NULL,
				CONSTRAINT [PK_dbo.Log] PRIMARY KEY CLUSTERED ([Id] ASC)
					WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
			) ON [PRIMARY]
			-->

			<commandText>
				insert into dbo.Logger (
				SourceProject, MachineName, Logged, Level, Message,
				Logger, Callsite, Exception, Guid, CreatedAt
				) values (
				@SourceProject, @MachineName, @Logged, @Level, @Message,
				@Logger, @Callsite, @Exception, (newId()), getdate()
				);
			</commandText>

			<parameter name="@SourceProject" layout="API" />
			<parameter name="@MachineName" layout="${machinename} - [${local-ip}]" />
			<parameter name="@Logged" layout="${date}" />
			<parameter name="@Level" layout="${level}" />
			<parameter name="@Message" layout="${message}" />
			<parameter name="@Logger" layout="${logger}" />
			<parameter name="@Callsite" layout="${callsite} - [${callsite-filename}] - [${callsite-linenumber}]" />
			<parameter name="@Exception" layout="${exception}" />
		</target>
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Error" writeTo="allfile" />

		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<logger name="Microsoft.*" maxlevel="Fatal" final="true" />
		
		<!-- BlackHole without writeTo -->
		<logger name="*" minlevel="Error" writeTo="ownFile-web" />

		<!-- Database -->
		<logger name="*" minlevel="Error" writeTo="database" />

	</rules>
</nlog>